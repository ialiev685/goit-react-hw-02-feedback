{"version":3,"sources":["components/Section/Section.jsx","components/Notification/Notification.jsx","components/StatisticItem/StatisticItem.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/App.js","index.js"],"names":["Section","title","children","className","Notification","message","StatisticItem","props","good","neutral","bad","total","positivePercentage","Statistics","FeedbackOptions","options","onLeaveFeedback","map","el","type","name","onClick","App","countTotalFeedback","Object","values","state","reduce","acc","value","countPositiveFeedbackPercentage","countGood","totalFeedback","Math","ceil","addFeedback","event","target","setState","prevState","this","btnList","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVAWeA,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAU,UAAnB,UACE,oBAAIA,UAAU,iBAAd,SAAgCF,IAC/BC,MCAQE,G,MAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGF,UAAU,eAAb,SAA6BE,MCuBvBC,G,MAtBO,SAACC,GACrB,IAAQC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBAEnC,OACE,qCACE,qBAAIT,UAAU,mBAAd,mBAAwCK,KACxC,qBAAIL,UAAU,mBAAd,sBAA2CM,KAC3C,qBAAIN,UAAU,mBAAd,kBAAuCO,KACvC,qBAAIP,UAAU,mBAAd,oBAAyCQ,KACzC,qBAAIR,UAAU,mBAAd,gCACsBS,EADtB,YCgBSC,G,MAzBI,SAACN,GAClB,IAAQC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBAiBnC,OAAOD,EAAQ,EAdb,sBAAKR,UAAU,aAAf,UACE,oBAAIA,UAAU,oBAAd,wBACA,oBAAIA,UAAU,mBAAd,SACE,cAAC,EAAD,CACEK,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,SAS1B,cAAC,EAAD,CAAcP,QAAQ,wBCGXS,G,MAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oBAAIb,UAAU,uBAAd,SACGY,EAAQE,KAAI,SAACC,GAAD,OACX,oBAAaf,UAAU,6BAAvB,SACE,wBACEA,UAAU,+BACVgB,KAAK,SACLC,KAAMF,EACNG,QAASL,EAJX,SAMGE,KAPIA,UCiDFI,E,kDAlDb,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IASRgB,mBAAqB,WAGnB,OAFeC,OAAOC,OAAO,EAAKC,OACLC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,IAZhD,EAgBnBC,gCAAkC,WAChC,IAAML,EAASD,OAAOC,OAAO,EAAKC,OACpBK,EAAc,EAAKL,MAAzBlB,KACFwB,EAAgBP,EAAOE,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,GAEjE,OAAOI,KAAKC,KAAMH,EAAYC,EAAiB,MArB9B,EAwBnBG,YAAc,SAACC,GACb,IAAMhB,EAAOgB,EAAMC,OAAOjB,KAE1B,EAAKkB,UAAS,SAACC,GAAD,sBAAmBnB,EAAOmB,EAAUnB,GAAQ,OAxB1D,EAAKM,MAAQ,CACXlB,KAAM,EACNC,QAAS,EACTC,IAAK,GANU,E,0CA8BnB,WACE,MAA+B8B,KAAKd,MAA5BlB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB+B,EAAUjB,OAAOkB,KAAKF,KAAKd,OAEjC,OACE,eAAC,EAAD,CAASzB,MAAM,wBAAf,UACE,cAAC,EAAD,CAAiBc,QAAS0B,EAASzB,gBAAiBwB,KAAKL,cAEzD,cAAC,EAAD,CACE3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,KAAKjB,qBACZX,mBAAoB4B,KAAKV,2C,GA5CjBa,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.32cb6be1.chunk.js","sourcesContent":["import \"./Section.scss\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className=\"Section\">\n      <h2 className=\"Section__title\">{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import \"./Notification.scss\";\n\nconst Notification = ({ message }) => {\n  return <p className=\"Notification\">{message}</p>;\n};\n\nexport default Notification;\n","import \"./StatisticItem.scss\";\n\nimport PropTypes from \"prop-types\";\n\nconst StatisticItem = (props) => {\n  const { good, neutral, bad, total, positivePercentage } = props;\n\n  return (\n    <>\n      <li className=\"Statistics__item\">Good: {good}</li>\n      <li className=\"Statistics__item\">Neutral: {neutral}</li>\n      <li className=\"Statistics__item\">Bad: {bad}</li>\n      <li className=\"Statistics__item\">Total: {total}</li>\n      <li className=\"Statistics__item\">\n        Positive feedback: {positivePercentage}%\n      </li>\n    </>\n  );\n};\n\nStatisticItem.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n};\n\nexport default StatisticItem;\n","import Notification from \"../Notification\";\nimport StatisticItem from \"../StatisticItem\";\nimport \"./Statistics.scss\";\n\nconst Statistics = (props) => {\n  const { good, neutral, bad, total, positivePercentage } = props;\n\n  const markupStatistic = (\n    <div className=\"Statistics\">\n      <h2 className=\"Statistics__title\">Statistics</h2>\n      <ul className=\"Statistics__list\">\n        <StatisticItem\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positivePercentage}\n        />\n      </ul>\n    </div>\n  );\n\n  return total > 0 ? (\n    markupStatistic\n  ) : (\n    <Notification message=\"No feedback given\" />\n  );\n};\n\nexport default Statistics;\n","import \"./FeedbackOptions.scss\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <ul className=\"FeedbackOptions-list\">\n      {options.map((el) => (\n        <li key={el} className=\"FeedbackOptions-list__item\">\n          <button\n            className=\"FeedbackOptions-list__button\"\n            type=\"button\"\n            name={el}\n            onClick={onLeaveFeedback}\n          >\n            {el}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React, { Component } from \"react\";\n\nimport Section from \"./Section\";\nimport Statistics from \"./Statistics\";\nimport FeedbackOptions from \"./FeedbackOptions\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n    };\n  }\n\n  countTotalFeedback = () => {\n    const values = Object.values(this.state);\n    const totalFeedback = values.reduce((acc, value) => acc + value, 0);\n    return totalFeedback;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const values = Object.values(this.state);\n    const { good: countGood } = this.state;\n    const totalFeedback = values.reduce((acc, value) => acc + value, 0);\n\n    return Math.ceil((countGood / totalFeedback) * 100);\n  };\n\n  addFeedback = (event) => {\n    const name = event.target.name;\n\n    this.setState((prevState) => ({ [name]: prevState[name] + 1 }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const btnList = Object.keys(this.state);\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={btnList} onLeaveFeedback={this.addFeedback} />\n\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}